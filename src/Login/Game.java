/*
 Callum MacLeod
 25/1/2019
 ICS3U Mr. Kaune
 Culminating
 */
package Login;

import java.io.*;
import java.util.Random;


public class Game extends javax.swing.JFrame {

    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
    }
    /**
     * As the frame switches the username goes with it
     * @param para = the method recoginzes the username inputted before
     * @return the name as a string
     */
    public Game(String para) {
        initComponents();
        final String USER = para;
        userGrab.setText(USER);
        welcome.setText("Welcome " + USER + " good luck in your game!");
        
    }

    //player score integer
    int playerScore = 0;

    /**
     * Searches the file for and finds the number of lines
     * @param LINES = the method will find the number of lines
     * @return the number of lines in integer form
     */
    public int LINES;
    //setting up how many lines there are in the file
    {
        File dataFile = new File("Archive.txt");
        FileReader in;
        BufferedReader readFile;
        int lines = 0;
        String yes;
        try {
            in = new FileReader(dataFile);
            readFile = new BufferedReader(in);
            //counting every line then adding to variable
            while ((yes = readFile.readLine()) != null) {
                lines++;
            }
            readFile.close();
            in.close();
            //exceptions
        } catch (FileNotFoundException e) {
            System.out.println("File does not exist or could not be found.");
            System.err.println("FileNotFoundException: " + e.getMessage());
        } catch (IOException e) {
            System.out.println("Problem reading file.");
            System.err.println("IOException: " + e.getMessage());
        }
        LINES = lines;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userGrab = new javax.swing.JLabel();
        answer = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        welcome14 = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        statement = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        answerIn = new javax.swing.JTextField();
        play = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        quesIn = new javax.swing.JTextArea();
        welcome = new javax.swing.JLabel();
        menu = new javax.swing.JButton();
        quesNum1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        menu1 = new javax.swing.JButton();

        userGrab.setText("jLabel2");

        answer.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1250, 750));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 68)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Trivia Archive");

        welcome14.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        welcome14.setText("Answer:");

        score.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        score.setText("Score: 0");

        statement.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        statement.setText(" ");

        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        answerIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerInActionPerformed(evt);
            }
        });

        play.setText("Question");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        quesIn.setColumns(20);
        quesIn.setRows(5);
        jScrollPane2.setViewportView(quesIn);

        welcome.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        welcome.setText("Welcome please enjoy the program!");

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        quesNum1.setFont(new java.awt.Font("Trebuchet MS", 0, 22)); // NOI18N
        quesNum1.setText("Question: 0");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("You have opened the game\nportion of this program! To \nstart the game simply press the \nquestion button. This will \nassign you a question, put your \nanswer to that question in the\nslot below. When you are ready \nto check your answer hit the \ncheck button. If correct your \nscore will go up and you will \nget a \"Correct!\" message. If you\nare wrong though your score\nwill revert to 0 and you will \nbe given an \"Incorrect.\" message.\nGood luck and have fun!\nNote: All answers are one word \nor number for simplicity and\nare also case sensitive.");
        jScrollPane1.setViewportView(jTextArea1);

        menu1.setText("Menu");
        menu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(menu))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(428, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(welcome14, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(answerIn, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(quesNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(197, 197, 197)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(391, 391, 391)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(statement, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(play)
                        .addGap(61, 61, 61)
                        .addComponent(check)
                        .addGap(559, 559, 559))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(353, 353, 353))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(menu1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(welcome)
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(score)
                    .addComponent(quesNum1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(welcome14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(answerIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check)
                    .addComponent(play))
                .addGap(13, 13, 13)
                .addComponent(menu1)
                .addGap(10, 10, 10)
                .addComponent(statement)
                .addGap(63, 63, 63)
                .addComponent(menu))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void answerInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerInActionPerformed

    }//GEN-LAST:event_answerInActionPerformed


    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        //reading file
        String[] questions = new String[LINES];
        File dataFile = new File("Archive.txt");
        FileReader in;
        BufferedReader readFile;
        int i = 0;
        String yes;
        try {
            in = new FileReader(dataFile);
            readFile = new BufferedReader(in);
            //copying file to string array
            while ((yes = readFile.readLine()) != null) {
                questions[i] = yes;
                i++;
            }
            //finding first question
            int num = 0;
            int num2;
            //because every question has three lines to it finding the number of questions is Lines/3
            num = LINES / 3;
            int[] num1 = new int[num];
            Random r = new Random();
            //taking the array length to collapse it and pick a random question number from it
            int randomNumber = r.nextInt(num1.length);
            int RANDOM = randomNumber;
            num2 = RANDOM;
            //develops the question formula and adds it to the boxes
            quesIn.setText(questions[num2 * 3]);
            answer.setText(questions[num2 * 3 + 1]);
            //closing file
            readFile.close();
            in.close();
            //exceptions for try statement
        } catch (FileNotFoundException e) {
            System.out.println("File does not exist or could not be found.");
            System.err.println("FileNotFoundException: " + e.getMessage());
        } catch (IOException e) {
            System.out.println("Problem reading file.");
            System.err.println("IOException: " + e.getMessage());
        }

    }//GEN-LAST:event_playActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        //finding answers
        String answerGiven = answerIn.getText();
        String realAnswer = answer.getText();
        if (answerGiven.equals(realAnswer)) {
            //increasing score
            playerScore++;
            score.setText("Score: " + playerScore);
            statement.setText("Correct!");
            //repeat of setting up questions
            String[] questions = new String[LINES];
            File dataFile = new File("Archive.txt");
            FileReader in;
            BufferedReader readFile;
            int i = 0;
            String yes;
            try {
                in = new FileReader(dataFile);
                readFile = new BufferedReader(in);
                while ((yes = readFile.readLine()) != null) {
                    questions[i] = yes;
                    i++;
                }
                int num = 0;
                int num2;
                num = LINES / 3;
                int[] num1 = new int[num];
                Random r = new Random();
                int randomNumber = r.nextInt(num1.length);
                int RANDOM = randomNumber;
                num2 = RANDOM;
                quesIn.setText(questions[num2 * 3]);
                answer.setText(questions[num2 * 3 + 1]);
                readFile.close();
                in.close();
            } catch (FileNotFoundException e) {
                System.out.println("File does not exist or could not be found.");
                System.err.println("FileNotFoundException: " + e.getMessage());
            } catch (IOException e) {
                System.out.println("Problem reading file.");
                System.err.println("IOException: " + e.getMessage());
            }

        } else if (answerGiven == null ? realAnswer != null : !answerGiven.equals(realAnswer)) {
            //resetting player score
            playerScore = 0;
            score.setText("Score: " + playerScore);
            statement.setText("Incorrect.");
            //repeat of setting up questions
            String[] questions = new String[LINES];
            File dataFile = new File("Archive.txt");
            FileReader in;
            BufferedReader readFile;
            int i = 0;
            String yes;
            try {
                in = new FileReader(dataFile);
                readFile = new BufferedReader(in);
                while ((yes = readFile.readLine()) != null) {
                    questions[i] = yes;
                    i++;
                }
                int num = 0;
                num = LINES / 3;
                int[] num1 = new int[num];
                Random r = new Random();
                int randomNumber = r.nextInt(num1.length);
                final int RANDOM = randomNumber;
                int num2 = RANDOM;
                quesIn.setText(questions[num2 * 3]);
                answer.setText(questions[num2 * 3 - 1]);
                readFile.close();
                in.close();
            } catch (FileNotFoundException e) {
                System.out.println("File does not exist or could not be found.");
                System.err.println("FileNotFoundException: " + e.getMessage());
            } catch (IOException e) {
                System.out.println("Problem reading file.");
                System.err.println("IOException: " + e.getMessage());
            }

        }

    }//GEN-LAST:event_checkActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        
    }//GEN-LAST:event_menuActionPerformed

    private void menu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu1ActionPerformed
        final String USER = userGrab.getText();
        //holding username and setting up menu return
        new Main(USER).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answer;
    private javax.swing.JTextField answerIn;
    private javax.swing.JButton check;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton menu;
    private javax.swing.JButton menu1;
    private javax.swing.JButton play;
    private javax.swing.JTextArea quesIn;
    public javax.swing.JLabel quesNum1;
    public javax.swing.JLabel score;
    public javax.swing.JLabel statement;
    private javax.swing.JLabel userGrab;
    public javax.swing.JLabel welcome;
    public javax.swing.JLabel welcome14;
    // End of variables declaration//GEN-END:variables
}
